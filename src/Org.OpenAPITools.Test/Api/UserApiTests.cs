/*
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserApiTests : IDisposable
    {
        private UserApi instance;

        public UserApiTests()
        {
            instance = new UserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserApi
            //Assert.IsType<UserApi>(instance);
        }

        /// <summary>
        /// Test ApiUser2faPost
        /// </summary>
        [Fact]
        public void ApiUser2faPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string payload = null;
            //var response = instance.ApiUser2faPost(payload);
            //Assert.IsType<Post2faResponse>(response);
        }

        /// <summary>
        /// Test ApiUserBalanceactionsGet
        /// </summary>
        [Fact]
        public void ApiUserBalanceactionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //var response = instance.ApiUserBalanceactionsGet(page, size);
            //Assert.IsType<GetBalanceActionsResponse>(response);
        }

        /// <summary>
        /// Test ApiUserBalancesGet
        /// </summary>
        [Fact]
        public void ApiUserBalancesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiUserBalancesGet();
            //Assert.IsType<Dictionary<string, double>>(response);
        }

        /// <summary>
        /// Test ApiUserBalanceslistGet
        /// </summary>
        [Fact]
        public void ApiUserBalanceslistGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiUserBalanceslistGet();
            //Assert.IsType<GetBalancesListResponse>(response);
        }

        /// <summary>
        /// Test ApiUserDepositsGet
        /// </summary>
        [Fact]
        public void ApiUserDepositsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //var response = instance.ApiUserDepositsGet(currency);
            //Assert.IsType<GetDepositsResponse>(response);
        }

        /// <summary>
        /// Test ApiUserOrdersGet
        /// </summary>
        [Fact]
        public void ApiUserOrdersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pair = null;
            //var response = instance.ApiUserOrdersGet(pair);
            //Assert.IsType<GetOrdersResponse>(response);
        }

        /// <summary>
        /// Test ApiUserTradehistoryGet
        /// </summary>
        [Fact]
        public void ApiUserTradehistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //var response = instance.ApiUserTradehistoryGet(page, size);
            //Assert.IsType<GetUserTradeHistoryResponse>(response);
        }

        /// <summary>
        /// Test ApiUserVerificationsGet
        /// </summary>
        [Fact]
        public void ApiUserVerificationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ApiUserVerificationsGet();
        }

        /// <summary>
        /// Test ApiUserWithdrawalsGet
        /// </summary>
        [Fact]
        public void ApiUserWithdrawalsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currency = null;
            //var response = instance.ApiUserWithdrawalsGet(currency);
            //Assert.IsType<GetWithdrawalsResponse>(response);
        }
    }
}

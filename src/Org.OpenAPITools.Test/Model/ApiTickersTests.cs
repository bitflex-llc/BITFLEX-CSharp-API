/*
 * BITFLEX Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ApiTickers
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ApiTickersTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ApiTickers
        //private ApiTickers instance;

        public ApiTickersTests()
        {
            // TODO uncomment below to create an instance of ApiTickers
            //instance = new ApiTickers();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ApiTickers
        /// </summary>
        [Fact]
        public void ApiTickersInstanceTest()
        {
            // TODO uncomment below to test "IsType" ApiTickers
            //Assert.IsType<ApiTickers>(instance);
        }


        /// <summary>
        /// Test the property 'Pair'
        /// </summary>
        [Fact]
        public void PairTest()
        {
            // TODO unit test for the property 'Pair'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Fact]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'Volume'
        /// </summary>
        [Fact]
        public void VolumeTest()
        {
            // TODO unit test for the property 'Volume'
        }
        /// <summary>
        /// Test the property 'PairVolume'
        /// </summary>
        [Fact]
        public void PairVolumeTest()
        {
            // TODO unit test for the property 'PairVolume'
        }
        /// <summary>
        /// Test the property 'High'
        /// </summary>
        [Fact]
        public void HighTest()
        {
            // TODO unit test for the property 'High'
        }
        /// <summary>
        /// Test the property 'Low'
        /// </summary>
        [Fact]
        public void LowTest()
        {
            // TODO unit test for the property 'Low'
        }
        /// <summary>
        /// Test the property 'Change'
        /// </summary>
        [Fact]
        public void ChangeTest()
        {
            // TODO unit test for the property 'Change'
        }

    }

}
